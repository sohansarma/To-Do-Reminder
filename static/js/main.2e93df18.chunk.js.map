{"version":3,"sources":["Components/navigation.js","Components/webNotif.js","Components/mainPage.js","Action/toDoAction.js","type.js","App.js","serviceWorker.js","Reducer/toDoReducer.js","index.js"],"names":["Navigation","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleToggle","setState","toggle","state","react_default","a","createElement","className","Component","window","React","WebNotif","props","ignore","title","console","log","e","tag","now","Date","options","body","lang","dir","reminders","date","map","reminder","dueDate","onClick","handleButtonClick","bind","Notification_default","notSupported","handleNotSupported","onPermissionGranted","handlePermissionGranted","onPermissionDenied","handlePermissionDenied","handleNotificationOnClick","onClose","handleNotificationOnClose","onError","handleNotificationOnError","timeout","connect","MainPage","onSubmit","event","_this$state","description","addReminder","document","querySelectorAll","forEach","input","value","alert","deleteReminder","id","handleChange","renderReminders","key","contenteditable","moment","format","class","_this2","style","marginBottom","onChange","target","type","ref","placeholder","react_datepicker_es","position","placeholderText","timeInputLabel","selected","dateFormat","showTimeInput","minDate","clearReminders","action","App","navigation","mainPage","webNotif","Boolean","location","hostname","match","Math","random","arguments","length","undefined","read_cookie","concat","toConsumableArray","bake_cookie","filter","removeById","store","createStore","reducer","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e93df18.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\nimport '../style.css';\r\n\r\n\r\n\r\nclass Navigation extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state ={\r\n\t\t\ttoggle: false,\r\n\t\t}\r\n\t}\r\n\r\n     handleToggle = () => {\r\n     \tthis.setState({toggle:!this.state.toggle});\r\n     }\r\n  \r\n\r\n\trender(){\r\n\t\treturn(\r\n               <div className=\"navigation d-flex justify-content-between\">\r\n                  <div className=\"logo\">TO-DO-LIST</div>\r\n                  {/*<div onClick={this.handleToggle}>\r\n                  {this.state.toggle ?\r\n                  \t\t<i className=\"material-icons toggle\">toggle_on</i>\r\n                  \t\t:\r\n                  \t\t<i className=\"material-icons toggle\">toggle_off</i>\r\n                  }\r\n                  </div>*/}\r\n               </div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Notification  from 'react-web-notification';\r\nimport { connect } from 'react-redux';\r\n\r\n//allow react dev tools work\r\nwindow.React = React;\r\n\r\nclass WebNotif extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ignore: true,\r\n      title: ''\r\n    };\r\n  }\r\n\r\n  handlePermissionGranted(){\r\n    console.log('Permission Granted');\r\n    this.setState({\r\n      ignore: false\r\n    });\r\n  }\r\n  handlePermissionDenied(){\r\n    console.log('Permission Denied');\r\n    this.setState({\r\n      ignore: true\r\n    });\r\n  }\r\n  handleNotSupported(){\r\n    console.log('Web Notification not Supported');\r\n    this.setState({\r\n      ignore: true\r\n    });\r\n  }\r\n\r\n  handleNotificationOnClick(e, tag){\r\n    console.log(e, 'Notification clicked tag:' + tag);\r\n  }\r\n\r\n  handleNotificationOnError(e, tag){\r\n    console.log(e, 'Notification error tag:' + tag);\r\n  }\r\n\r\n  handleNotificationOnClose(e, tag){\r\n    console.log(e, 'Notification closed tag:' + tag);\r\n  }\r\n\r\n  /*handleNotificationOnShow(e, tag){\r\n    this.playSound();\r\n    console.log(e, 'Notification shown tag:' + tag);\r\n  }*/\r\n\r\n  /*playSound(filename){\r\n    document.getElementById('sound').play();\r\n  }*/\r\n\r\n  handleButtonClick() {\r\n   /*const data = {reminders.map(reminder => {\r\n       return reminder\r\n      })\r\n    }*/\r\n\r\n    if(this.state.ignore) {\r\n      return;\r\n    }\r\n\r\n    const now = Date.now();\r\n\r\n    const title = 'React-Web-Notification' + now;\r\n    const body = 'Hello' + new Date();\r\n    const tag = now;\r\n    /*const icon = 'http://mobilusoss.github.io/react-web-notification/example/Notifications_button_24.png';*/\r\n    // const icon = 'http://localhost:3000/Notifications_button_24.png';\r\n\r\n    // Available options\r\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification\r\n    const options = {\r\n      tag: tag,\r\n      body: body,\r\n     /* icon: icon,*/\r\n      lang: 'en',\r\n      dir: 'ltr',\r\n      // sound: './sound.mp3'  // no browsers supported https://developer.mozilla.org/en/docs/Web/API/notification/sound#Browser_compatibility\r\n    }\r\n    this.setState({\r\n      title: title,\r\n      options: options\r\n    });\r\n  }\r\n\r\n\r\n  /*getData = () => {\r\n    const date = {reminders.map(reminder => {\r\n                     return reminder.dueDate;\r\n                 })}\r\n   console.log(\"Date from web notif\",date);\r\n  }*/\r\n\r\n  render() {\r\n   const { reminders } = this.props;\r\n   console.log(\"Reminders from Web notif\",reminders);\r\n   const date = <div>{reminders.map(reminder => {\r\n       return reminder.dueDate\r\n   })\r\n}</div>\r\n  console.log(\"Date from \", date);\r\n    return (\r\n      <div>\r\n             {/*{reminders.map(reminder => {\r\n                 return reminder.dueDate\r\n             })}*/}\r\n        <button onClick={this.handleButtonClick.bind(this)}>Notif!</button>\r\n        <Notification\r\n          ignore={this.state.ignore && this.state.title !== ''}\r\n          notSupported={this.handleNotSupported.bind(this)}\r\n          onPermissionGranted={this.handlePermissionGranted.bind(this)}\r\n          onPermissionDenied={this.handlePermissionDenied.bind(this)}\r\n          onClick={this.handleNotificationOnClick.bind(this)}\r\n          onClose={this.handleNotificationOnClose.bind(this)}\r\n          onError={this.handleNotificationOnError.bind(this)}\r\n          timeout={5000}\r\n          title={this.state.title}\r\n          options={this.state.options}\r\n        />\r\n        {/*<audio id='sound' preload='auto'>\r\n          <source src='./sound.mp3' type='audio/mpeg' />\r\n          <source src='./sound.ogg' type='audio/ogg' />\r\n          <embed hidden='true' autostart='false' loop='false' src='./sound.mp3' />\r\n        </audio>*/}\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    reminders: state\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {})(WebNotif);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addReminder, deleteReminder, clearReminders } from '../Action/toDoAction';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport webNotif from './webNotif';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: '',\r\n      description: '',\r\n      dueDate: '',\r\n    }\r\n  }\r\n\r\n\r\n  onSubmit = (event) => {\r\n    const { title, description, dueDate } = this.state;\r\n    if(title && description){\r\n         this.props.addReminder( title,description,dueDate );\r\n         this.setState({title: '', description: '', dueDate: ''});\r\n         let inputFields = document.querySelectorAll('input');\r\n         inputFields.forEach(input => input.value = '');\r\n    }else{\r\n         alert(\"Write something\");\r\n    }\r\n  }\r\n\r\n  deleteReminder = (id) => {\r\n    this.props.deleteReminder(id);\r\n  }\r\n\r\n   handleChange = (date) => {\r\n    this.setState({\r\n      dueDate: date\r\n    });\r\n  }\r\n\r\n  renderReminders = () => {\r\n    const { reminders } = this.props;\r\n    console.log(\"Reminder\",reminders);\r\n    return (\r\n      <div className=\"width\">\r\n        {\r\n          reminders.map(reminder => {\r\n            return (\r\n              <div className=\"d-flex list_container flex-wrap justify-content-between\">\r\n                  <div className=\"\" key={reminder.id}>\r\n                    <div className=\"title_style\" contenteditable=\"true\">{reminder.title}</div>\r\n                    <div className=\"desc_style\" contenteditable=\"true\">{reminder.description}</div>\r\n                    {reminder.dueDate && \r\n                      <div className=\"d-flex\">\r\n                        <div className=\"Reminder_text d-flex align-items-center\">Reminder set for</div>\r\n                        <div className=\"Date_style\">{moment(new Date(reminder.dueDate)).format('lll')}</div>\r\n                      </div>\r\n                    }\r\n                    \r\n                  </div>\r\n                  <div \r\n                    className=\"d-flex align-items-center\"\r\n                    onClick={() => this.deleteReminder(reminder.id)}\r\n                  >\r\n                  <i class=\"material-icons delete_icon \">\r\n                  delete_forever\r\n                  </i>\r\n                  </div>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n        </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body_style\">\r\n      <div className=\"\">\r\n      <div style={{marginBottom: '20px'}} className= \"d-flex justify-content-center align-items-center\">\r\n             <form \r\n               className=\"form-inline margin\" \r\n               onChange={event => this.setState({title: event.target.value})}>\r\n                 <input \r\n                    type=\"text\" \r\n                    ref=\"itemName\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"Add a new todo...\"\r\n                  />\r\n            </form>\r\n            <form \r\n              className=\"form-inline margin\" \r\n              onChange={event => this.setState({description: event.target.value})}>\r\n                <input \r\n                    type=\"text\" \r\n                    ref=\"itemName\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"Add a description...\"\r\n                 />\r\n            </form>\r\n            <div className=\"\">\r\n            <DatePicker\r\n                position=\"bottom\"\r\n                className=\"date_container margin\"\r\n                placeholderText='Set Reminder'\r\n                timeInputLabel=\"Time:\"\r\n                selected={this.state.dueDate}\r\n                onChange={this.handleChange}\r\n                dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                showTimeInput\r\n                minDate={new Date()}\r\n            />\r\n            </div>\r\n            <div className=\"add_button d-flex align-items-center justify-content-center\" onClick={this.onSubmit}>Add</div>\r\n            <div\r\n            className=\"d-flex align-items-center justify-content-center botton_style_remove\"\r\n            onClick={() => this.props.clearReminders()}\r\n          >\r\n            Clear reminders\r\n          </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n          { this.renderReminders() }\r\n          </div>\r\n          <webNotif />\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    reminders: state\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    addReminder,\r\n    deleteReminder,\r\n    clearReminders })(MainPage);","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from '../type';\r\n\r\nexport const addReminder = ( title, description, dueDate) => {\r\n    const action = {\r\n        type: ADD_REMINDER,\r\n        title,\r\n        description,\r\n        dueDate\r\n    }\r\n    console.log('-------------action in addReminder---------->', action);\r\n    return action;\r\n}\r\n\r\nexport const deleteReminder = (id) => {\r\n    const action = {\r\n        type: DELETE_REMINDER,\r\n        id\r\n    }\r\n    console.log('---------------deleting in actions---------->', action);\r\n    return action;\r\n}\r\n\r\nexport const clearReminders = () => {\r\n    const action = {\r\n        type: CLEAR_REMINDERS\r\n    }\r\n    return action;\r\n}","export const ADD_REMINDER = 'ADD_REMINDER';\r\nexport const DELETE_REMINDER ='DELETE_REMINDER';\r\nexport const CLEAR_REMINDERS = 'CLEAR_REMINDERS';","import React from 'react';\nimport Navigation from './Components/navigation';\nimport MainPage from './Components/mainPage';\nimport './App.css';\nimport WebNotif from './Components/webNotif';\n\nfunction App() {\n  return (\n    <div className=\"\">\n         <Navigation />\n         <MainPage />\n          <WebNotif />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from '../type';\r\nimport { bake_cookie, read_cookie } from 'sfcookies';\r\n\r\nconst reminder = (action) => {\r\n  let { title, description, dueDate } = action;\r\n  return {\r\n    id: Math.random(),\r\n    title,\r\n    description,\r\n    dueDate\r\n  }\r\n}\r\n\r\n//Removes data\r\nconst removeById  = (state = [], id) => {\r\n  const reminders = state.filter(reminder => reminder.id !== id);\r\n  console.log('new reduced reminders', reminders);\r\n  return reminders;\r\n}\r\n\r\n\r\nconst reminders = (state = [], action) => {\r\n  let reminders = null;\r\n  state = read_cookie('reminders');\r\n  \r\n  switch(action.type) {\r\n   \r\n    case ADD_REMINDER:\r\n      reminders = [...state, reminder(action)];\r\n      bake_cookie('reminders', reminders);\r\n      return reminders;\r\n    \r\n    case DELETE_REMINDER:\r\n      reminders = removeById(state, action.id);\r\n      bake_cookie('reminders', reminders);\r\n      return reminders;\r\n    \r\n    case CLEAR_REMINDERS:\r\n      reminders = [];\r\n      bake_cookie('reminders', reminders);\r\n      return reminders;\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reminders;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './Reducer/toDoReducer';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t<App />\n\t</Provider>\n\t, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}